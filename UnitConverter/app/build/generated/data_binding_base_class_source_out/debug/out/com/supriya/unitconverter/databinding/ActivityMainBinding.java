// Generated by view binder compiler. Do not edit!
package com.supriya.unitconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputLayout;
import com.supriya.unitconverter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Spinner dropdownUnit;

  @NonNull
  public final Spinner dropdownValue;

  @NonNull
  public final EditText etValue;

  @NonNull
  public final ImageView ivArrowUnit;

  @NonNull
  public final ImageView ivArrowValue;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextInputLayout tillValue;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvConvertValue;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Spinner dropdownUnit,
      @NonNull Spinner dropdownValue, @NonNull EditText etValue, @NonNull ImageView ivArrowUnit,
      @NonNull ImageView ivArrowValue, @NonNull LinearLayout main,
      @NonNull TextInputLayout tillValue, @NonNull MaterialToolbar toolbar,
      @NonNull TextView tvConvertValue) {
    this.rootView = rootView;
    this.dropdownUnit = dropdownUnit;
    this.dropdownValue = dropdownValue;
    this.etValue = etValue;
    this.ivArrowUnit = ivArrowUnit;
    this.ivArrowValue = ivArrowValue;
    this.main = main;
    this.tillValue = tillValue;
    this.toolbar = toolbar;
    this.tvConvertValue = tvConvertValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dropdownUnit;
      Spinner dropdownUnit = ViewBindings.findChildViewById(rootView, id);
      if (dropdownUnit == null) {
        break missingId;
      }

      id = R.id.dropdownValue;
      Spinner dropdownValue = ViewBindings.findChildViewById(rootView, id);
      if (dropdownValue == null) {
        break missingId;
      }

      id = R.id.etValue;
      EditText etValue = ViewBindings.findChildViewById(rootView, id);
      if (etValue == null) {
        break missingId;
      }

      id = R.id.ivArrowUnit;
      ImageView ivArrowUnit = ViewBindings.findChildViewById(rootView, id);
      if (ivArrowUnit == null) {
        break missingId;
      }

      id = R.id.ivArrowValue;
      ImageView ivArrowValue = ViewBindings.findChildViewById(rootView, id);
      if (ivArrowValue == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.tillValue;
      TextInputLayout tillValue = ViewBindings.findChildViewById(rootView, id);
      if (tillValue == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvConvertValue;
      TextView tvConvertValue = ViewBindings.findChildViewById(rootView, id);
      if (tvConvertValue == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, dropdownUnit, dropdownValue, etValue,
          ivArrowUnit, ivArrowValue, main, tillValue, toolbar, tvConvertValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
