// Generated by view binder compiler. Do not edit!
package com.supriya.quizapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.supriya.quizapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentQuizBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final MaterialButton btnNextQuiz;

  @NonNull
  public final MaterialButton btnOption1;

  @NonNull
  public final MaterialButton btnOption2;

  @NonNull
  public final MaterialButton btnOption3;

  @NonNull
  public final MaterialButton btnOption4;

  @NonNull
  public final ImageView ivInfo;

  @NonNull
  public final ImageView ivTimer;

  @NonNull
  public final LinearProgressIndicator quizProgress;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvCorrectAns;

  @NonNull
  public final TextView tvInfo;

  @NonNull
  public final TextView tvQuestion;

  @NonNull
  public final TextView tvTimer;

  private FragmentQuizBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull MaterialButton btnNextQuiz, @NonNull MaterialButton btnOption1,
      @NonNull MaterialButton btnOption2, @NonNull MaterialButton btnOption3,
      @NonNull MaterialButton btnOption4, @NonNull ImageView ivInfo, @NonNull ImageView ivTimer,
      @NonNull LinearProgressIndicator quizProgress, @NonNull MaterialToolbar toolbar,
      @NonNull TextView tvCorrectAns, @NonNull TextView tvInfo, @NonNull TextView tvQuestion,
      @NonNull TextView tvTimer) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.btnNextQuiz = btnNextQuiz;
    this.btnOption1 = btnOption1;
    this.btnOption2 = btnOption2;
    this.btnOption3 = btnOption3;
    this.btnOption4 = btnOption4;
    this.ivInfo = ivInfo;
    this.ivTimer = ivTimer;
    this.quizProgress = quizProgress;
    this.toolbar = toolbar;
    this.tvCorrectAns = tvCorrectAns;
    this.tvInfo = tvInfo;
    this.tvQuestion = tvQuestion;
    this.tvTimer = tvTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentQuizBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentQuizBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_quiz, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentQuizBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.btnNextQuiz;
      MaterialButton btnNextQuiz = ViewBindings.findChildViewById(rootView, id);
      if (btnNextQuiz == null) {
        break missingId;
      }

      id = R.id.btnOption1;
      MaterialButton btnOption1 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption1 == null) {
        break missingId;
      }

      id = R.id.btnOption2;
      MaterialButton btnOption2 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption2 == null) {
        break missingId;
      }

      id = R.id.btnOption3;
      MaterialButton btnOption3 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption3 == null) {
        break missingId;
      }

      id = R.id.btnOption4;
      MaterialButton btnOption4 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption4 == null) {
        break missingId;
      }

      id = R.id.ivInfo;
      ImageView ivInfo = ViewBindings.findChildViewById(rootView, id);
      if (ivInfo == null) {
        break missingId;
      }

      id = R.id.ivTimer;
      ImageView ivTimer = ViewBindings.findChildViewById(rootView, id);
      if (ivTimer == null) {
        break missingId;
      }

      id = R.id.quizProgress;
      LinearProgressIndicator quizProgress = ViewBindings.findChildViewById(rootView, id);
      if (quizProgress == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvCorrectAns;
      TextView tvCorrectAns = ViewBindings.findChildViewById(rootView, id);
      if (tvCorrectAns == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      id = R.id.tvQuestion;
      TextView tvQuestion = ViewBindings.findChildViewById(rootView, id);
      if (tvQuestion == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      return new FragmentQuizBinding((ConstraintLayout) rootView, appbar, btnNextQuiz, btnOption1,
          btnOption2, btnOption3, btnOption4, ivInfo, ivTimer, quizProgress, toolbar, tvCorrectAns,
          tvInfo, tvQuestion, tvTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
